{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
$this->assign('title',__('{{ singularHumanName }} ( ' . ${{ singularVar }}->{{ displayField }} . ' ) '));
$this->Html->addCrumb(__('{{ pluralHumanName }}'),['action'=>'index']);
$this->Html->addCrumb(__('{{ singularHumanName }} ( ' . ${{ singularVar }}->{{ displayField }} . ' ) '));
?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<div class="{{ singularVar }} view">
    <div class="card">
        <div class="page-header border-bottom border-dark mb-2 py-1">
            <h1 class="h5 d-inline"><?= __('{{ singularHumanName }} ( ' . ${{ singularVar }}->{{ displayField }} . ' ) ') ?></h1>
            <div class="float-sm-right mt-2 mt-sm-0" role="group" aria-label="{{ singularVar }} nav">
                <?=$this->Html->link(
                    '<i class="fa fa-arrow-circle-left"></i>',
                    ['action' => 'index'],
                    ['class' => 'btn btn-sm btn-outline-dark','title' => __('Back to {{ singularHumanName }}'),'escape' => false]
                );?>
                <?= $this->Form->postLink(
                    '<i class="far fa-trash-alt"></i>',
                    ['action' => 'delete', {{ pK|raw }}],
                    ['confirm' => __('Are you sure you want to delete this {{ singularHumanName }}?', {{ pK|raw }}),'class' => 'btn btn-sm btn-outline-danger','title' => __('Delete'),'escape' => false]
                )?>
            </div>
        </div>
        <div class="card-body p-0">
            <dl class="row">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if associationFields[field] %}
{% set details = associationFields[field] %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ details.property|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></dd>
{% else %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ field|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= h(${{ singularVar }}->{{ field }}) ?></dd>
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ alias|underscore|singularize|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></dd>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ field|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></dd>
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ field|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= h(${{ singularVar }}->{{ field }}) ?></dd>
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ field|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></dd>
{% endfor %}
{% endif %}
{% if groupedFields.text %}
{% for field in groupedFields.text %}
                <dt class="col-sm-3 col-lg-2 mb-1"><?= __('{{ field|humanize }}') ?></dt>
                <dd class="col-sm-9 col-lg-10 mb-1"><?= $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }})); ?></dd>
{% endfor %}
{% endif %}
            </dl>
        </div>
    </div>
</div>
{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
{% set otherSingularVar = alias|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}
<div class="related-{{ details.property }} view">
    <div class="card">
        <div class="page-header border-bottom border-dark mb-2 py-1">
            <h1 class="h5 d-inline"><?= __('Related {{ otherPluralHumanName }}') ?></h1>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive mb-2">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="thead-light">
                        <tr>
{% for field in details.fields %}
                            <th scope="col"><?= __('{{ field|humanize }}') ?></th>
{% endfor %}
                            <th scope="col" class="actions"><?= __('Actions') ?></th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php if (!empty(${{ singularVar }}->{{ details.property }})): ?>
                            <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}): ?>
                            <tr>
{% for field in details.fields %}
                                <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
{% endfor %}
{% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
                                <td class="actions">
                                    <?= $this->Html->link('<i class="fas fa-eye"></i>', ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}],['class' => 'btn btn-sm btn-outline-dark', 'title' => __('View'), 'escape' => false]) ?>
                                    <?= $this->Html->link('<i class="far fa-edit"></i>', ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}],['class' => 'btn btn-sm btn-outline-dark', 'title' => __('Edit'), 'escape' => false]) ?>
                                    <?= $this->Form->postLink('<i class="far fa-trash-alt"></i>', ['controller' => '{{ details.controller }}', 'action' => 'delete', {{ otherPk|raw }}], ['confirm' => __('Are you sure you want to delete this {{ otherPluralHumanName }}?', {{ otherPk|raw }}),'class' => 'btn btn-sm btn-outline-danger', 'title' => __('Delete'), 'escape' => false]) ?>
                                </td>
                            </tr>
                            <?php endforeach; ?>
                        <?php else: ?>
                            <tr>
                                <td colspan="{{ details.fields|length + 1 }}"><?= __('Record not found!'); ?></td>
                            </tr>
                        <?php endif;?>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
{% endfor %}
